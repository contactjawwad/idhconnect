stages:
  - check
  - build
  - test
  - deploy
  - cleanup

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE_TAG: "1.0"

before_script:
  # Ensure Docker is installed before logging in
  - apt-get update
  - apt-get install -y docker.io docker-compose
  - docker --version
  - docker-compose --version
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

check:
  stage: check
  script:
    # You can retain the version checks here for verification
    - docker --version
    - docker-compose --version
  only:
    - staging
    - main

build:
  stage: build
  script:
    - docker-compose -f deploy/docker-compose.yml build
  only:
    - staging
    - main

test:
  stage: test
  script:
    - docker-compose -f deploy/docker-compose.yml run --rm idh_container pytest tests/
  only:
    - staging
  tags:
    - test

deploy:
  stage: deploy
  script:
    - docker-compose -f deploy/docker-compose.yml up -d
    - docker tag inventorydatahub contactjawwad/idh-app:idh-$DOCKER_IMAGE_TAG
    - docker tag inventorydatahub contactjawwad/idh-app:idh-latest
    - docker tag my-nginx-image contactjawwad/idh-app:nginx-$DOCKER_IMAGE_TAG
    - docker tag my-nginx-image contactjawwad/idh-app:nginx-latest
    - docker push contactjawwad/idh-app:idh-$DOCKER_IMAGE_TAG
    - docker push contactjawwad/idh-app:idh-latest
    - docker push contactjawwad/idh-app:nginx-$DOCKER_IMAGE_TAG
    - docker push contactjawwad/idh-app:nginx-latest
  only:
    - main
  tags:
    - deploy

cleanup_app:
  stage: cleanup
  script:
    # Stop and remove all Docker containers
    - docker-compose -f deploy/docker-compose.yml down --rmi all
    # Remove all Docker images
    - docker image prune -af
    # Optionally remove Docker volumes (uncomment if needed)
    # - docker volume prune -f
    # Remove any dangling images
    - docker system prune -af
  when: manual
  only:
    - main
  tags:
    - cleanup
